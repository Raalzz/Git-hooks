#!/bin/sh
RED="\033[1;31m"
GREEN="\033[1;32m"
NC="\033[0m"
linter_exit_code=1
staged_js_files=$(git diff --cached --diff-filter=d --name-only | grep .js$)
echo "staged files are ${staged_js_files}"

# npm run lint:fix $staged_js_files
./node_modules/.bin/eslint $staged_js_files --quiet --fix


linter_exit_code=$?
echo "linter_exit_code is ${linter_exit_code}"

echo "running  git add to ${staged_js_files}"
git add -f $staged_js_files

if [ $linter_exit_code -ne 0 ]
then
  echo "${RED} ❌ Linter errors have occurred ( ͡ಥ ͜ʖ ͡ಥ)${NC}"
  exit 1
else
  echo "${GREEN} ✔ Eslint did not find any errors [̲̅$̲̅(̲̅ ͡° ͜ʖ ͡°̲̅)̲̅$̲̅]${NC}"
  exit 0
fi

#
#
#
#
#
#
#
#
#

#New Implementation:

# RED="\033[1;31m"
# GREEN="\033[1;32m"
# NC="\033[0m"

# #get all staged files in a variable "STAGED_FILES"
# STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR | sed 's| |\\ |g')
# staged_js_files=$(git diff --cached --diff-filter=d --name-only | grep .js$)

# printf "Running Hoooksss \n"
# echo "staged files are ${STAGED_FILES} \n"
# echo "staged_js_files are  ${staged_js_files} \n"


# #If there are no staged files then exit
# [ -z "$STAGED_FILES" ] && exit 0

# printf "Running lint:fix \n"

# # Validate all the staged files
# # npm run lint:fix $STAGED_FILES
# echo "$STAGED_FILES" | xargs npm run lint:fix

# # Add back the modified/prettified files to staging
# echo "$STAGED_FILES" | xargs git add

# exit 0